//Create a Class Employee with the following specifications

//Properties
//----------
//string Name -> no blank names should be allowed
//int EmpNo ->  must be readonly and autogenerated
//decimal Basic -> must be between some range
//short DeptNo -> must be > 0

//Methods
//-------
//decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)


//Create constructors to accept initial values for Employee obj
//Employee o1 = new Employee("Amol", 123465, 10);
//Employee o2 = new Employee("Amol", 123465);
//Employee o3 = new Employee("Amol");
//Employee o4 = new Employee();

//EmpNo must be autogenerated ... i.e.
//first object should automatically get EmpNo 1
//second object should automatically get EmpNo 2
//third object should automatically get EmpNo 3
//...and so on...

//Test Cases
//Employee o1 = new Employee()
//Employee o2 = new Employee()
//Employee o3 = new Employee()
//cw(o1.EmpNo)
//cw(o2.EmpNo)
//cw(o3.EmpNo)

//cw(o3.EmpNo)
//cw(o2.EmpNo)
//cw(o1.EmpNo)


namespace day2Assignment1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            



            Employee o1 = new Employee();
            Employee o2 = new Employee();
            Employee o3 = new Employee();
            Console.WriteLine(o1.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o3.EmpNo);

            Console.WriteLine(o3.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o1.EmpNo);


        
        }
    }

    public class Employee
    {
        private static int EmpCount; 

        static Employee()
        {
            EmpCount = 0;
        }
        private string name;
        public string Name
        {
            get
            {
                return name;
            }
            set
            {

                if (string.IsNullOrEmpty(value))
                {
                    Console.WriteLine("Entered Username is Emppty please Pls enter valid name");
                }
                else
                {

                    name = value;
                }
            }
        }
        private int empNo;
        public int EmpNo
        {
            get { return empNo; } 
        }
        private decimal basic;
        public decimal Basic
        {
            get { return basic; }
            set { 
                
                if(value >= 10000 && value <= 70000)
                    basic = value; 
                else
                    Console.WriteLine("Invalid value of basic");

            }
        }

        private short deptNo;
        public short DeptNo
        {
            get { return deptNo; }
            set {

                if (value <= 0)
                {
                    Console.WriteLine("Invalid dept no");

                }
                else
                {
                    deptNo = value;
                }
            
            }
        }

        public Employee(string name = "null", decimal basic = 11000, short deptNo = 1 )
        {
            this.Name = name;   
            this.Basic = basic; 
            this.DeptNo = deptNo;
            empNo = ++EmpCount;
        }


        public decimal GetNetSalary()
        {
            return this.basic + basic*1/10;
        }

    }
}